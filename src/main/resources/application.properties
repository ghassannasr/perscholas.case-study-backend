#spring.datasource.url=jdbc:mysql://localhost:3306/goodtimesblog?createDatabaseIfNotExist=true&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username = root
#spring.datasource.password =
#spring.jpa.database-platform = org.hibernate.dialect.MySQLDialect
#
#spring.jpa.hibernate.ddl-auto = none
#spring.jpa.hibernate.show-sql = true
#
#spring.jpa.generate-ddl=true
##spring.jpa.hibernate.ddl-auto = create

###############

#This is the group of mysql properties that currently works
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.database-platform = org.hibernate.dialect.MySQLDialect
#create, create-drop, validate, update
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/goodtimesblog?createDatabaseIfNotExist=true&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.url=jdbc:mysql://localhost:3306/goodtimesblog?serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username=root
spring.datasource.password=

spring.jpa.hibernate.show-sql = true

#############

# This is the H2 that currently works
#spring.datasource.url=jdbc:h2:mem:goodtimesblog
#server.port=8080
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#Supposedly this property should make h2 console work on AWS:
#spring.h2.console.settings.web-allow-others=true

#Examples
# H2
#spring.datasource.url=jdbc:h2:mem:goodtimesblog
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/test
#spring.datasource.username=dbuser
#spring.datasource.password=dbpass
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect